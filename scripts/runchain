#!/bin/bash

#######################################################################
# RUNCHAIN: A script to run a chain of blockdiag calculations
#----------------------------------------------------------------------
#           Assumptions: (1) The quantum chemistry output is from the
#                            DFT/MRCI code, with files named out3,
#                            mos.dat and det.1.n.bin being parsed.
#                        (2) C1 symmetry was used in the DFT/MRCI
#                            calculation.
#                        (3) The first directory in the $filein file
#                            corresponds to the reference geometry,
#                            and the remaining directories are in the
#                            order in which the chain of diabatisation
#                            calculations are to be performed.
#######################################################################


##############################################
# Input file name
##############################################
filein=$1
if [ -z $filein ]; then
    echo
    echo "No filename given. Quitting."
    echo
    exit -1
fi

##############################################
# No. ref. states
##############################################
nrefsta=$2
if [ -z $nrefsta ]; then
    echo
    echo "The no. ref. states has not been given. Quitting."
    echo
    exit -1
fi

##############################################
# Determinant screening threshold (optional)
##############################################
if [ ! -z $3 ]; then
    dthresh=$3
fi

##############################################
# Norm cutoff (optional)
##############################################
if [ ! -z $4 ]; then
    normcutoff=$4
fi

##############################################
# Perform the chain of blockdiag calculations
##############################################
# Main directory
maindir=`pwd`

# Array of DFT/MRCI output directory names
dirarr=( $(cat $filein) )

# Q0 DFT/MRCI output directory
refdir=${dirarr[0]}

# Extract any tar.gz determinant files in the Q0 DFT/MRCI output directory
cd $refdir
for file in `ls det.*.bin.tar.gz`; do tar -zxvf $file; done
cd $maindir

# Loop over the geometries at which the diabatisation is to be
# performed
for (( i=1; i<${#dirarr[@]}; i++ )); do
    
    # Current DFT/MRCI output directory
    currdir=${dirarr[i]}

    # Extract any tar.gz determinant files
    cd $currdir
    for file in `ls det.*.bin.tar.gz`; do tar -zxvf $file; done
    cd $maindir

    # Working directory filestem
    stem=`echo $currdir | sed 's/\/$//g' | awk -F "/" '{print $NF}'`_diab

    # Ouput our progress
    echo $stem
    
    # Make the working directory
    if [ -d $stem ]; then
	rm -r $stem
    fi
    mkdir $stem

    # Write the blockdiag input file
    #
    # MO files
    echo "\$mos_ref = ../$refdir/mos.dat" >>$stem/$stem.inp
    echo "\$mos_disp = ../$currdir/mos.dat" >>$stem/$stem.inp
    echo >>$stem/$stem.inp
    #
    # Ref. determinants
    echo "\$dets_ref" >>$stem/$stem.inp
    if [ -z $oldstem ]; then
	for (( S=1; S<=$nrefsta; S++ )); do
	    echo "../$refdir/det.1.$S.bin $S" >>$stem/$stem.inp
	done
    else
	count=0
	for S in `grep "Selected state" $oldstem/$oldstem.log  | awk '{print $5}'`; do
	    count=$((count+1))
	    echo "../$refdir/det.1.$S.bin $count" >>$stem/$stem.inp
	done
    fi
    echo "\$end" >>$stem/$stem.inp
    echo >>$stem/$stem.inp
    #
    # Disp. determinants
    echo "\$dets_disp" >>$stem/$stem.inp
    ndispsta=0
    for detfile in `ls $currdir/det.1.*.bin | sort -V`; do
	ndispsta=$((ndispsta+1))
	echo "../$detfile $ndispsta" >>$stem/$stem.inp
    done
    echo "\$end" >>$stem/$stem.inp
    echo >>$stem/$stem.inp
    #
    # Adiabatic energies
    echo "\$energies" >>$stem/$stem.inp
    for (( S=1; S<=$ndispsta; S++ )); do
	e=`grep -m$S "DFTCI  -" $currdir/out3 | tail -1 | sed 's/#//g' | awk '{print $4}'`
	echo $e $S >>$stem/$stem.inp
    done
    echo "\$end" >>$stem/$stem.inp
    echo >>$stem/$stem.inp
    #
    # Ref. ADT
    if [ ! -z $oldstem ]; then
	echo "\$ref_trans=../$oldstem/$oldstem.log" >>$stem/$stem.inp
	echo >>$stem/$stem.inp
    fi
    #
    # Determinant screening threshold
    if [ ! -z $dthresh ]; then
	echo "\$dthresh=$dthresh" >>$stem/$stem.inp
	echo >>$stem/$stem.inp
    fi
    #
    # Norm cutoff
    if [ ! -z $normcutoff ]; then
	echo "\$norm_cutoff=$normcutoff" >>$stem/$stem.inp
	echo >>$stem/$stem.inp
    fi
    # Transition dipoles from the ground state
    ntrans=`grep -c "dipole (L)" $currdir/singlets.prp`
    if [ "$ntrans" != '0' ]; then
	echo "\$dipole" >>$stem/$stem.inp
    	for (( s1=1; s1<=$ntrans; s1++ )); do
	    s=$((s1+1))
	    tdip=`grep -m$s1 "dipole (L)" $currdir/singlets.prp | awk '{print $3, " ", $4, " ", $5}' | tail -1` 
	    echo $tdip 1 $s >>$stem/$stem.inp
	done
	echo "\$end" >>$stem/$stem.inp
	echo >>$stem/$stem.inp
    fi

    # Run blockdiag
    cd $stem
    blockdiag.x $stem.inp
    cd ../

    # Cleanup
    cd $refdir
    rm det.1.{?,??}.bin
    cd $maindir
    
    # Re-set $refdir
    refdir=$currdir
	    
    # Re-set the name of the last blockdiag working directory
    oldstem=$stem
    
done

# Cleanup
cd $refdir
rm det.1.{?,??}.bin
cd $maindir
